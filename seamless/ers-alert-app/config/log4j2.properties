property.filename = /var/seamless/log/alertapp/alertapp.log
property.webservice_log_filename = /var/seamless/log/alertapp/alertapp_webservice.log

appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d %5p [%t] (%F:%L) - %m%n

appender.alertapp.type = RollingFile
appender.alertapp.name = File
appender.alertapp.fileName = ${filename}
appender.alertapp.filePattern = ${filename}.%d{yyyy-MM-dd}
appender.alertapp.layout.type = PatternLayout
appender.alertapp.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n
appender.alertapp.policies.type = Policies
appender.alertapp.policies.time.type = TimeBasedTriggeringPolicy
appender.alertapp.policies.time.interval = 1

#Indicates whether the interval should be adjusted to cause the next rollover to occur on the interval boundary.
#For example, if the item is hours, the current hour is 3 am and the interval is 4
#then the first rollover will occur at 4 am and then next ones will occur at 8 am, noon, 4pm, etc.
appender.alertapp.policies.time.modulate = true

#The SizeBasedTriggeringPolicy causes a rollover once the file has reached the specified size. The size can be specified in bytes, with the suffix KB, MB or GB, for example 20MB
appender.alertapp.policies.size.type = SizeBasedTriggeringPolicy
appender.alertapp.policies.size.size=100MB
appender.alertapp.strategy.type = DefaultRolloverStrategy
appender.alertapp.strategy.max = 5







appender.alertapp_webservice.type = RollingFile
appender.alertapp_webservice.name = WEBSERVICE_FILE
appender.alertapp_webservice.fileName = ${webservice_log_filename}
appender.alertapp_webservice.filePattern = ${webservice_log_filename}.%d{yyyy-MM-dd}
appender.alertapp_webservice.layout.type = PatternLayout
appender.alertapp_webservice.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %c{1} [%p] %m%n
appender.alertapp_webservice.policies.type = Policies
appender.alertapp_webservice.policies.time.type = TimeBasedTriggeringPolicy
appender.alertapp_webservice.policies.time.interval = 1

#Indicates whether the interval should be adjusted to cause the next rollover to occur on the interval boundary.
#For example, if the item is hours, the current hour is 3 am and the interval is 4
#then the first rollover will occur at 4 am and then next ones will occur at 8 am, noon, 4pm, etc.
appender.alertapp_webservice.policies.time.modulate = true

#The SizeBasedTriggeringPolicy causes a rollover once the file has reached the specified size. The size can be specified in bytes, with the suffix KB, MB or GB, for example 20MB
appender.alertapp_webservice.policies.size.type = SizeBasedTriggeringPolicy
appender.alertapp_webservice.policies.size.size=100MB
appender.alertapp_webservice.strategy.type = DefaultRolloverStrategy
appender.alertapp_webservice.strategy.max = 5

logger.cxf.name = org.apache.cxf
logger.cxf.level = ERROR

logger.monitor.name=etm.core.monitor
logger.monitor.level=INFO


logger.etm.name=etm-result
logger.etm.level=INFO

logger.alertapp.name=com.seamless.ers.alertapp
logger.alertapp.level=INFO

logger.alertapp_webservice.name =com.seamless.ers.alertapp.webservice
logger.alertapp_webservice.level = INFO
logger.alertapp_webservice.additivity = false
logger.alertapp_webservice.appenderRef.rolling.ref = WEBSERVICE_FILE
logger.alertapp_webservice.appenderRef.console.ref = STDOUT

rootLogger.level = INFO
rootLogger.appenderRef.console.ref = STDOUT
rootLogger.appenderRef.rolling.ref = File





#------------------ADDED----TO----SHOW--LOGS--ON--CONSOLE---------------------
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.Threshold=INFO
log4j.appender.CONSOLE.Target=System.out
log4j.appender.CONSOLE.Append=true
log4j.appender.CONSOLE.DatePattern='.'yyyy-MM-dd
log4j.appender.console.layout.ConversionPattern=%d{ISO8601} [%t] [%X{correlationId}] %-5p [%c{1}] - %X{ersReference} %m%n
#------------------ADDED----TO----SHOW--LOGS--ON--CONSOLE---------------------

