(self.webpackChunk_unified_order=self.webpackChunk_unified_order||[]).push([[6099],{55599:(e,r,n)=>{var t;n.amdD,void 0===(t=function(){var e=function(e){return Number.prototype.toString.call(e,36).toUpperCase()},r=function(e){return parseInt(e,36)},n=Array.prototype.indexOf||function(e,r){for(var n=r||0,t=this.length;n<t;n++)if(this[n]===e)return n;return-1};return{JSON,pack:function(r,t){var i=(t=t||{}).verbose||!1;i&&console.log("Normalize the JSON Object"),r="string"==typeof r?this.JSON.parse(r):r,i&&console.log("Creating a empty dictionary");var s={strings:[],integers:[],floats:[]};i&&console.log("Creating the AST");var o=function r(t){i&&console.log("Calling recursiveAstBuilder with "+this.JSON.stringify(t));var o,a,l=typeof t;if(null===t)return{type:"null",index:-3};if(void 0===t)return{type:"undefined",index:-5};if(t instanceof Array){var u=["@"];for(var f in t)t.hasOwnProperty(f)&&u.push(r(t[f]));return u}if("object"===l){for(var c in u=["$"],t)t.hasOwnProperty(c)&&(u.push(r(c)),u.push(r(t[c])));return u}if(""===t)return{type:"empty",index:-4};if("string"===l)return-1==(o=n.call(s.strings,t))&&(s.strings.push("string"!=typeof(a=t)?a:a.replace(/[\+ \|\^\%]/g,(function(e){return{" ":"+","+":"%2B","|":"%7C","^":"%5E","%":"%25"}[e]}))),o=s.strings.length-1),{type:"strings",index:o};if("number"===l&&t%1==0)return-1==(o=n.call(s.integers,t))&&(s.integers.push(e(t)),o=s.integers.length-1),{type:"integers",index:o};if("number"===l)return-1==(o=n.call(s.floats,t))&&(s.floats.push(t),o=s.floats.length-1),{type:"floats",index:o};if("boolean"===l)return{type:"boolean",index:t?-1:-2};throw new Error("Unexpected argument of type "+typeof t)}(r),a=s.strings.length,l=s.integers.length;s.floats.length,i&&console.log("Parsing the dictionary");var u=s.strings.join("|");return u+="^"+s.integers.join("|"),u+="^"+s.floats.join("|"),i&&console.log("Parsing the structure"),u+="^"+function r(n){if(i&&console.log("Calling a recursiveParser with "+this.JSON.stringify(n)),n instanceof Array){var t=n.shift();for(var s in n)n.hasOwnProperty(s)&&(t+=r(n[s])+"|");return("|"===t[t.length-1]?t.slice(0,-1):t)+"]"}var o=n.type,u=n.index;if("strings"===o)return e(u);if("integers"===o)return e(a+u);if("floats"===o)return e(a+l+u);if("boolean"===o)return n.index;if("null"===o)return-3;if("undefined"===o)return-5;if("empty"===o)return-4;throw new TypeError("The item is alien!")}(o),i&&console.log("Ending parser"),t.debug?{dictionary:s,ast:o,packed:u}:u},unpack:function(e,n){n=n||{};var t=e.split("^");n.verbose&&console.log("Building dictionary");var i,s=[],o=t[0];if(""!==o){o=o.split("|"),n.verbose&&console.log("Parse the strings dictionary");for(var a=0,l=o.length;a<l;a++)s.push("string"!=typeof(i=o[a])?i:i.replace(/\+|%2B|%7C|%5E|%25/g,(function(e){return{"+":" ","%2B":"+","%7C":"|","%5E":"^","%25":"%"}[e]})))}if(""!==(o=t[1]))for(o=o.split("|"),n.verbose&&console.log("Parse the integers dictionary"),a=0,l=o.length;a<l;a++)s.push(r(o[a]));if(""!==(o=t[2]))for(o=o.split("|"),n.verbose&&console.log("Parse the floats dictionary"),a=0,l=o.length;a<l;a++)s.push(parseFloat(o[a]));o=null,n.verbose&&console.log("Tokenizing the structure");var u="",f=[],c=t[3].length;for(a=0;a<c;a++){var g=t[3].charAt(a);"|"===g||"$"===g||"@"===g||"]"===g?(u&&(f.push(r(u)),u=""),"|"!==g&&f.push(g)):u+=g}var p=f.length,h=0;return n.verbose&&console.log("Starting recursive parser"),function e(){var r=f[h++];if(n.verbose&&console.log("Reading collection type "+("$"===r?"object":"Array")),"@"===r){for(var t=[];h<p;h++){var i=f[h];if(n.verbose&&console.log("Read "+i+" symbol"),"]"===i)return t;if("@"===i||"$"===i)t.push(e());else switch(i){case-1:t.push(!0);break;case-2:t.push(!1);break;case-3:t.push(null);break;case-5:t.push(void 0);break;case-4:t.push("");break;default:t.push(s[i])}}return n.verbose&&console.log("Parsed "+this.JSON.stringify(t)),t}if("$"===r){for(t={};h<p;h++){var o=f[h];if("]"===o)return t;if(o=-4===o?"":s[o],"@"===(i=f[++h])||"$"===i)t[o]=e();else switch(i){case-1:t[o]=!0;break;case-2:t[o]=!1;break;case-3:t[o]=null;break;case-5:t[o]=void 0;break;case-4:t[o]="";break;default:t[o]=s[i]}}return n.verbose&&console.log("Parsed "+this.JSON.stringify(t)),t}throw new TypeError("Bad token "+r+" isn't a type")}()}}}.apply(r,[]))||(e.exports=t)}}]);