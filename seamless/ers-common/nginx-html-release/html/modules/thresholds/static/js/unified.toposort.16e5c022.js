(self.webpackChunk_unified_thresholds=self.webpackChunk_unified_thresholds||[]).push([[422],{95159:e=>{function n(e,n){var r=e.length,t=new Array(r),o={},a=r,d=function(e){for(var n=new Map,r=0,t=e.length;r<t;r++){var o=e[r];n.has(o[0])||n.set(o[0],new Set),n.has(o[1])||n.set(o[1],new Set),n.get(o[0]).add(o[1])}return n}(n),i=function(e){for(var n=new Map,r=0,t=e.length;r<t;r++)n.set(e[r],r);return n}(e);for(n.forEach((function(e){if(!i.has(e[0])||!i.has(e[1]))throw new Error("Unknown node. There is an unknown node in the supplied edges.")}));a--;)o[a]||h(e[a],a,new Set);return t;function h(e,n,a){if(a.has(e)){var s;try{s=", node was:"+JSON.stringify(e)}catch(e){s=""}throw new Error("Cyclic dependency"+s)}if(!i.has(e))throw new Error("Found unknown node. Make sure to provided all involved nodes. Unknown node: "+JSON.stringify(e));if(!o[n]){o[n]=!0;var f=d.get(e)||new Set;if(n=(f=Array.from(f)).length){a.add(e);do{var u=f[--n];h(u,i.get(u),a)}while(n);a.delete(e)}t[--r]=e}}}e.exports=function(e){return n(function(e){for(var n=new Set,r=0,t=e.length;r<t;r++){var o=e[r];n.add(o[0]),n.add(o[1])}return Array.from(n)}(e),e)},e.exports.array=n}}]);