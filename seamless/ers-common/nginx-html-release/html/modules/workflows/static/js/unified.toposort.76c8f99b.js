(self.webpackChunk_unified_workflows=self.webpackChunk_unified_workflows||[]).push([[422],{5159:n=>{function e(n,e){var r=n.length,o=new Array(r),t={},a=r,f=function(n){for(var e=new Map,r=0,o=n.length;r<o;r++){var t=n[r];e.has(t[0])||e.set(t[0],new Set),e.has(t[1])||e.set(t[1],new Set),e.get(t[0]).add(t[1])}return e}(e),i=function(n){for(var e=new Map,r=0,o=n.length;r<o;r++)e.set(n[r],r);return e}(n);for(e.forEach((function(n){if(!i.has(n[0])||!i.has(n[1]))throw new Error("Unknown node. There is an unknown node in the supplied edges.")}));a--;)t[a]||d(n[a],a,new Set);return o;function d(n,e,a){if(a.has(n)){var w;try{w=", node was:"+JSON.stringify(n)}catch(n){w=""}throw new Error("Cyclic dependency"+w)}if(!i.has(n))throw new Error("Found unknown node. Make sure to provided all involved nodes. Unknown node: "+JSON.stringify(n));if(!t[e]){t[e]=!0;var s=f.get(n)||new Set;if(e=(s=Array.from(s)).length){a.add(n);do{var h=s[--e];d(h,i.get(h),a)}while(e);a.delete(n)}o[--r]=n}}}n.exports=function(n){return e(function(n){for(var e=new Set,r=0,o=n.length;r<o;r++){var t=n[r];e.add(t[0]),e.add(t[1])}return Array.from(e)}(n),n)},n.exports.array=e}}]);