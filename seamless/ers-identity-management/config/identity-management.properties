# Properties for module ers-identity-management

# Bridge Connection
#bridge_connection.url=http://localhost:8915/imsbridge/v1/login
spring.profiles.active=PROD
server.port=8219

# Principal Service connection
ers_principal_service.url=http://ers-coreproxy-service.ers-prod.svc.cluster.local:8912/principalService

# Access manager service connection
access_manager_service.url=http://ers-access-management-system-service.ers-prod.svc.cluster.local:8374/access
access_manager_service.verify_access.uri=/v1/verifyAccess
access_manager_service.gateway_access.uri=/v1/gateway/resolve

# Dealer Manager service connection
dealer_manager_service.url=http://ers-dealer-management-system-service.ers-prod.svc.cluster.local:8033/dms
dealer_manager_service.get_reseller_info.uri=/auth/getResellerInfo

ims_bridge_service.url=http://ims-bridge-service:8919/imsbridge
ims_bridge.forget_password.uri=/forgetPassword
ims_bridge.forget_password.v2.uri=/v2/forgetPassword
ims_bridge.change_password.uri=/changePassword
ims_bridge.expire_password.uri=/expirePassword
ims_bridge_service.login.uri=/v1/login

# Notification Manageer service connection
notification_manager_service.url=http://ers-notification-manager-service.ers-prod.svc.cluster.local:8277
notification_manager_service.register.uri=/register

# ERS Reference Generator service connection
reference_generator_service.url=http://localhost:9997/reference-generator
reference_generator_service.next_reference.uri=/next-reference

#Api curl configurations
api_mandatory_headers=date

############### Connection properties for rest client ###############
##Connection properties for rest client
#Http Client settings(these configuration will be used while connecting to flytext server)
http.client.connection.totalMaxConnections=100
#Timeout (in millis) until a connection is established with the remote host
#decreased value from 30000
http.client.connection.connectionTimeout=10000
#Timeout (in millis) while waiting for data after the connection was established
#decreased value from 30000
http.client.connection.socketConnectionTimeout=10000
http.client.connection.maxConnectionsPerRoute=100
#Retry count, when there is a failure in establishing the connection
http.client.connection.retryCount=1

################ ENC CONFIGURATIONS ###############
idms.enc.key=682ede816988e58fb6d057d9d85605e0
idms.enc.isEncryptedVersion=false
idms.enc.enabled.for.channels.list=MOBILE

###token settings#####
token.secret=mysecret
token.issuer=ERS360
token.webclientId=EMART
token.mobileclientId=MobileApp
token.refresh.forEachTransaction=false
##token life in seconds
token.life=30000
##tortoise life in seconds
tortoise.life=3000000
token.secret.configurable.enable=true

encryptionkey=12345678

#-------------------------------------------------------------------------------------
# ERS Reference Generator Configuration
#-------------------------------------------------------------------------------------
reference_generator.generate_from_component=false
reference_generator.class_name=com.seamless.common.referencegeneration.TimestampReferenceGenerator
reference_generator.timestamp_repeat_warning_count=10
reference_generator.reference_counter_length=4
reference_generator.node_id=02
#reference_generator.timestamp_format=ddMMYYHHmm
#reference_generator.timestamp_format=ddMMYYHHmmss
reference_generator.timestamp_format=ddMMyyHHmmss

#cache.cluster.1.url=redis://10.18.12.124:6379
cache.cluster.1.url=redis://gp-redis-svc.ers-prod.svc.cluster.local:6379

useCache=true
#decreased value from 30000
cache.timeout=1000
cache.cluster.namespace=identity-management



#==========================================
store.formatted.msisdn=true
customVerifyToken.formatMsisdnWithPrefix=MSISDN,MSISDN1,MSISDN2

#customVerifyToken.trimMsisdnWithPrefix=880
#customVerifyToken.trimMsisdnKeys=MSISDN,MSISDN1,MSISDN2

#-------------------------------------------------------------------------------------
#Configure freemarker
#-------------------------------------------------------------------------------------
dataFeed.freemarker.file.path=/opt/seamless/conf/identity-management/templates
#-------------------------------------------------------------------------------------
#Configuration for executor service
#-------------------------------------------------------------------------------------
threadpoolmanager.pools.dataFeed.targetId=com.seamless.common.data.dump.dataFeed
threadpoolmanager.pools.dataFeed.corePoolSize=25
threadpoolmanager.pools.dataFeed.maxPoolSize=40
threadpoolmanager.pools.dataFeed.keepAliveTime=60000
threadpoolmanager.pools.dataFeed.keepAliveTimeUnit=MILLISECONDS
#-------------------------------------------------------------------------------------
#Data feed version
#-------------------------------------------------------------------------------------
dataFeed.version=1
dataFeed.componentName=idms
############# CORS config ####################
cors.enable=false
#comma separated origin list
cors.allowedorigins=*

#-------------------------------------------------------------------------------------
#Configuration for executor service
#-------------------------------------------------------------------------------------

threadpoolmanager.pools.auditFeed.targetId=com.seamless.common.data.dump.auditFeed
threadpoolmanager.pools.auditFeed.corePoolSize=25
threadpoolmanager.pools.auditFeed.maxPoolSize=40
threadpoolmanager.pools.auditFeed.keepAliveTime=60000
threadpoolmanager.pools.auditFeed.keepAliveTimeUnit=MILLISECONDS

#-------------------------------------------------------------------------------------
#Data feed version
#-------------------------------------------------------------------------------------
auditFeed.version=1
auditFeed.componentName=idms


##########Two Factory Auth cofig##########
login.twoFactorAuthenticationEnabled=false
login.twoFactorAuthenticationType=OTP

########## Type based Auth Fields ##########
login.fields.passwordField=motte_de_passe_flag
login.fields.otpField=one_time_password

message.body.layout=<#><message>fCn3m7YAenm

#-------------------------------------------------------------------------------------
# Locale properties
#-------------------------------------------------------------------------------------
locale.language=en
locale.languageHeaderName=language
messages.source.files.path=/opt/seamless/conf/identity-management

########## API access tokens ###############
externalApiToken.userType : POS_SYSTEM
externalApiToken.userId : POS2021
externalApiToken.apiKey : XXXXXXXXXXXXXXXXX

externalApiToken.1.clientId : POS2021
externalApiToken.1.apiKey : abcClient1Token

externalApiToken.2.clientId : POS2022
externalApiToken.2.apiKey : abcClient2Token

externalApiToken.3.clientId : POS2024
externalApiToken.3.apiKey : abcClient3Token

externalApiToken.4.clientId : POSSV2021
externalApiToken.4.apiKey : csgSVtestapikey

cookie.httpOnly=false
cookie.secure=false

#################Custom verification Auth Fields #############
# flag to enable gp specific custom verification
customVerifyToken.enabled=true
####Changed by Aman to test redis issue
#customVerifyToken.enabled=false

# Fields to be used in Initiator/Receiver Reseller validation. Both validation are supported userId & msisdn. Priority decrease from left to right
#customVerifyToken.authenticationMap={'LOGINID' : 'user|PASSWORD', 'MSISDN1' : 'msisdn|PIN', 'MSISDN' : 'msisdn|PIN'}
customVerifyToken.authenticationMap={ 'MSISDN' : 'msisdn|PIN' , 'MSISDN1' : 'msisdn|PIN' , 'LOGINID' : 'user|PASSWORD'}

# Fields to be used in gateway validation request. Key should not be changed, only value of each key is configurable
customVerifyToken.gatewayMap={'login' : 'LOGIN', 'password' : 'PASSWORD', 'gatewayCode' : 'REQUEST_GATEWAY_CODE','xRealIp':'x-real-ip'}

#Constant to identify type parameter from request body
customVerifyToken.requestTypeConstant=TYPE

# transaction type which needs receiver validation. All O2C request, the uid in system-token generated by using value of property (customVerifyToken.excludeInitiator.reseller)
#customVerifyToken.receiverInitiator.validation=O2CINTREQ,O2CINREQ,O2CWDREQ
#REMOVED FOR NO AUTHENTICATION TO CHANNEL
customVerifyToken.receiverInitiator.validation=O2CINREQ
#customVerifyToken.receiverInitiator.validation=O2CINREQ,O2CWDREQ
# for O2C transaction system-token will be generated for reseller defined in this property
customVerifyToken.excludeInitiator.reseller=operator

# transaction which require initiator validation (R2R request). the uid in system-token will be of initiator. Initiator is identified by value of property (customVerifyToken.authenticationMap)
customVerifyToken.resellerInitiator.validation=EXC2CTRFREQ,EXC2CRETREQ,EXC2CWDREQ,EXC2CRETREQ,EXRCTRFREQ,EXPROMORCTRFREQ,TRFREQ,RETREQ,WDTHREQ,USERADDREQ,RCTRFREQ,VIEWCUSER,EXTCNGPWDREQ,EXTPROMOVASTRFREQ,RCTRFREQ,EXPPBTRFREQ,EXXRCTRFREQ,XRCTRFREQ,EXESBTRFREQ,USERDELREQ,BALREQ,EXLSTXTRFREQ,LSTXTRFREQ,USERMODREQ,USERSRREQ,PPBTRFREQ,EXRCSTATREQ,CCHISREQ,DSRREQ,EXLSTTRFREQ,RCPNREQ,LTSREQ,EXOTHUSRBALREQ,L3TSREQ,RCREVREQ,USERMOVEMENTREQ,EXTPROMOPPBREQ,EXUSRBALREQ,OTHERBALANCE,RCPNREQ

# transactions which will be initiated by subscriber (P2P request). the uid in system-token will be of subscriber.
customVerifyToken.subscriberInitiator.validation=CCTRFREQ,CCPNREQ,CCHISREQ,PLTREQ,REGREQDREGREQ,DREGREQ,REGREQ,CCPRREQ
# to add support for all text content-type, multiple values are supported
customVerifyToken.text.contentType=['text/plain']
# to add support for all xml content-type, multiple values are supported
customVerifyToken.xml.contentType=['application/xml','text/xml']

### Allowed Base64 encoding ###
customVerifyToken.allowBase64.contentType=text/plain,application/xml
customVerifyToken.allowBase64.fields=PIN,NEWPIN,CONFIRMPIN

### Trim country code ###
customVerifyToken.trimMsisdnWithPrefix=880
customVerifyToken.trimMsisdnKeys=MSISDN,MSISDN1,MSISDN2

# to identify msisdn of subscriber from request body. Support multiple value comma seperated.
# Priority maintained from left tot right.
customVerifyToken.subscriberMsisdn.identifiers=MSISDN1,MSISDN

# default prefix for reference number and reference number prefix for all non-monetary transactions
customVerifyToken.reference_generator_default.prefix=NM
# prefix will contain single value and transaction types can handle multiple values comma separated.
customVerifyToken.reference_generator.1.prefix=OT
customVerifyToken.reference_generator.1.transaction_types=O2CINTREQ
customVerifyToken.reference_generator.2.prefix=OW
customVerifyToken.reference_generator.2.transaction_types=O2CWDREQ
customVerifyToken.reference_generator.3.prefix=CT
customVerifyToken.reference_generator.3.transaction_types=EXC2CTRFREQ,TRFREQ
customVerifyToken.reference_generator.4.prefix=CW
customVerifyToken.reference_generator.4.transaction_types=EXC2CWDREQ,WDTHREQ
customVerifyToken.reference_generator.5.prefix=BD
customVerifyToken.reference_generator.5.transaction_types=EXTPROMOVASTRFREQ,RCTRFREQ,EXPPBTRFREQ,EXRCTRFREQ,EXPROMORCTRFREQ,EXRCSTATREQ,EXXRCTRFREQ,XRCTRFREQ,EXESBTRFREQ,USERSRREQ,BALREQ,PPBTRFREQ,USERMODREQ,DSRREQ,CCTRFREQ,EXLSTTRFREQ,REGREQ,L3TSREQ,RCREVREQ,REGREQ,EXTPROMOPPBREQ

customVerifyToken.reference_generator.6.prefix=CR
customVerifyToken.reference_generator.6.transaction_types=EXC2CRETREQ,RETREQ

customVerifyToken.isCustomCoreProxyEnabled=true
#---------------------O2C---NO--VERIFY--USER--PASSWD----------------------------------------
customVerifyToken.externalCode.validation=O2CINTREQ,O2CWDREQ
dealer_manager_service.search_resellerBy_attribute=/auth/searchResellersByAttribute?limit={limit}&offSet={offSet}
customVerifyToken.externalCode.constant=EXTCODE
customVerifyToken.externalCode.internal.constant=externalCode
#---------------------O2C---NO--VERIFY--USER--PASSWD----------------------------------------
##For last X transaction Pin optional
customVerifyToken.onlyMsisdnValidationType.validation=EXLASTXTRFREQ
customVerifyToken.onlyMsisdnRequestKeys.validation=MSISDN

gp.txeProxy.requestTypes=EXRCTRFREQ,EXESBTRFREQ,EXPPBTRFREQ,RCTRFREQ,XRCTRFREQ,PPBTRFREQ,EXXRCTRFREQ,EXTPROMOPPBREQ,EXPROMORCTRFREQ,EXTPROMOVASTRFREQ,OTHERBALANCE,EXLASTXTRFREQ,VIEWCUSER
#gp.txeProxy.requestTypes=EXRCTRFREQ,EXESBTRFREQ,EXPPBTRFREQ,RCTRFREQ,XRCTRFREQ,PPBTRFREQ,EXXRCTRFREQ,EXTPROMOPPBREQ,EXPROMORCTRFREQ,EXTPROMOVASTRFREQ,OTHERBALANCE,EXLASTXTRFREQ
auditFeed.enable=false
dataFeed.enable=false

#gp.txeProxy.nestedRequestTypes=OTHERBALANCE,EXLASTXTRFREQ
gp.txeProxy.nestedRequestTypes=OTHERBALANCE,EXLASTXTRFREQ,VIEWCUSER


#This config is used to treat field with special characters.  Needs to be implemented for multiple fields
customVerifyToken.specialCharacterField.field=PASSWORD 

spring.servlet.multipart.max-file-size=30MB
spring.servlet.multipart.max-request-size=30MB

enable_coreproxy_reseller_validation=false
 
 
######## Aure SSO SAML ########
#ers.sso.url=http://localhost:38086
#ers.sso.channel=SEAMLESS-UNIFIED
#ers.sso.clientId=
#ers.sso.clientReference=
logging.config=file:/opt/seamless/conf/identity-management/log4j2.xml

#Added for Notification Preference
locale.userLangPreferenceEnabled=true
subscribertransactionconnection.url=http://ers-subscribersystem-service.ers-prod.svc.cluster.local:8087/subscribers/transaction
