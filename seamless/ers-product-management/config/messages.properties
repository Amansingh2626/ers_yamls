message.state.success=Success
message.operation.success=Success
message.operation.delete.success=Operation deleted by id {0}
message.state.transition.delete.success=State transition deleted by id {0}
message.statetransition.already.exists=StateModel transition doesn't exit
message.operation.get.invalid.id=Id is invalid
message.operation.delete.code.not.found=Code is invalid
message.operation.delete.id.not.found=Id is invalid
message.operation.delete.code.data.integrity.constraint=Operation is assigned to state transition
message.product.update.workflow.not.found=Workflow id is invalid
message.workflowStateModel.validation.code=code is empty
message.workflowStateModel.code.length.error=Code must be less than to 100 chars
message.workflowStateModel.validation.name=name is empty
message.workflowStateModel.name.length.error=Name must be less than to 200 chars
message.workflowStateModel.validation.description=description key is missing
message.workflowStateModel.validation.availableFrom=availableFrom is empty
message.workflowStateModel.validation.availableUntil=availableUntil is empty
#State messages
message.state.add.success=State added successfully
message.state.update.success=State updated successfully
message.state.invalid.code=State code is already assigned
message.state.invalid.id=State id is invalid
message.state.invalid.dates=availableUntil must be after availableFrom
message.workflowOperationModel.validation.code=code is empty
message.workflowOperationModel.code.length.error=Code must be less than to 100 chars
message.workflowOperationModel.validation.name=name is empty
message.workflowOperationModel.name.length.error=Name must be less than to 200 chars
message.workflowOperationModel.validation.description=description key is missing
message.operation.invalid.code=Code already exists
message.operation.invalid.id=Operation id is invalid
message.stateTransitionInputModel.invalid.from=from state is required
message.stateTransitionInputModel.invalid.to=to is required
message.stateTransition.invalid.dates=availableUntil must be after availableFrom
message.stateTransition.is.attached.with.workflow=State transition is attached with Workflow
message.stateTransition.invalid.dates.with.state=State transition dates are not in between dates of selected states
message.state.transition.already.exists=StateTransition already exists with same operation,fromState and toState
message.stateTransitionInputModel.invalid.operation=operation is required
message.stateTransitionInputModel.invalid.availableFrom=availableFrom is required
message.stateTransitionInputModel.invalid.availableUntil=availableUntil is required
message.stateTransitionInputModel.invalid.businessRules=businessRules is required
message.stateTransitionInputModel.invalid.businessActions=businessActions is required
message.workFlowModel.validation.name.notnull=name is mandatory
message.workFlowModel.validation.name.size=name length is invalid
message.workFlowModel.validation.description.notnull=description is mandatory
message.workFlowModel.validation.description.size=description length is invalid
message.workFlowModel.validation.transitions=transitions shouldn't be empty
message.workFlowModel.workflowStateTransitionInput.validation.id=Transition id is required
#WorkFlow messages
message.workflow.add.success=Workflow is added successfully
message.workflow.update.success=Workflow is updated successfully
message.workflow.delete.success=Workflow is deleted successfully by id {0}
message.workflow.delete.attached.with.product=Work flow is already attached with products
message.workflow.invalid.name=Workflow name already exists
message.workflow.invalid.id=Workflow id is invalid
message.workflow.invalid.transition.states.id=Some state transition id's are invalid
message.workflow.get.success=Success
message.permission.add.success=Permission added successfully
message.permission.delete.invalid.id=Id is invalid
message.permission.invalid.state.transition.id=State transition id is invalid
message.permission.constraint.violation=There should be unique state transition for Reseller type and Role id
message.permission.delete.success=All permissions deleted for provided state transition by id {0}
message.permission.get.success=Success
message.permission.invalid.role.id=Role id must be provided
message.permission.invalid.role.id.length=Role id length is invalid
message.permission.invalid.reseller.type=Reseller type must be provided
message.permission.invalid.reseller.type.length=Reseller type length is invalid
message.supplierModel.validation.code=Code field must not be empty
message.supplierModel.validation.codeTooLarge=Code field is too large
message.supplierModel.validation.name=Name field must not be empty
message.supplierModel.validation.nameTooLarge=Name field is too large
message.supplierModel.validation.descriptionTooLarge=Description field is too large
message.supplier.id.not.found=Supplier not found by id: {0}
message.supplier.code.not.found=Supplier code ({0}) already exists in system
message.product.variant.not.found=Product variant not found
message.dataModel.dataName.empty=DataName field should not be empty
message.dataModel.dataValue.empty=DataValue field should not be empty

#Product exception messages
message.product.id.not.found=Unable to find product by id: {0}
message.product.code.not.found=Unable to find product by code: {0}
message.product.ids.not.found=Unable to find products by ids: {0}
message.product.taxes.ids.not.found=Unable to find taxes by ids: {0}
message.product.variant.id.not.found=Unable to find product variant by id: {0}
message.product.SKU.not.found=Unable to find product by SKU: {0}
message.product.variant.SKU.not.found=Unable to find variant by sku: {0}
message.product.workflow.not.found=No workflow found
message.product.category.children.not.found=Unable to find children categories for category: {0}
message.product.variant.sku.not.found=No Product SKU found
message.product.variant.delete.not.allowed=Unable to delete, product must contain at least one variant
message.product.code.already.exist=code exists in the system
message.product.sku.already.exist=productSKU {0} already exists in the system
#Product category exception messages
message.product.categoryId.not.found=Unable to find category by id: {0}
message.product.category.name.unique=Product category name must be unique
message.product.category.cannot.delete=Product category {0} has children and cannot be deleted
message.product.parent.change.not.allowed=Parent change is not allowed

#Product validator exception messages
message.product.code.not.empty=Code field must not be empty
message.product.code.length.error=Code field length must be less than 60
message.product.name.empty=Name field must not be empty
message.product.name.length.error=Name field length must be less than 60
message.product.type.empty=ProductType field must be one of (serialised, non-serialised, services)
message.product.description.length.error=Description field length must be less than 255
message.product.image.field.length.error=Image field length must be less than 255
message.product.workflow.empty=Workflow Id must be greater than zero
message.product.supplier.empty=Supplier Id must be greater than zero
message.product.id.empty=Product Id cannot be empty
message.product.available.from.date.error=Available from must be smaller to available until
message.product.variant.empty=Variants field must not be empty
message.product.variant.sku.duplicate=Duplicate sku found
message.product.tax.empty=Tax Id must be greater than zero
message.product.tax.duplicate=Duplicate tax id found
message.product.sku.duplicate=productSKU exists in the system
message.product.default.supplier=default supplier is not configured in the system

#Product category validator exception messages
message.product.category.id.empty=Id field must not be empty
message.product.category.status.empty=Status field must be one of (decommissioned, blocked, available)
message.product.category.name.empty=Name field must not be empty
message.product.category.name.length.error=Name field length must be less than 60
message.product.category.available.from.error=Available from must be smaller to available until
message.product.category.description.length.error=Description field length must be less than 255
message.product.category.image.length.error=Image field length must be less than 255
message.product.category.workflow.empty=Workflow Id must be greater than zero

#Product variant validator exception messages
message.product.variant.sku.empty=ProductSKU field must not be empty
message.product.variant.sku.length.error=ProductSKU field length must be less than 60
message.product.variant.reference.length.error=Supplier reference field length must be less than 60
message.product.variant.ean.length.error=EAN Code field length must be less than 255
message.product.variant.image.length.error=Image URL field length must be less than 255
message.product.variant.uom.length.error=Unit of measure field length must be less than 20
message.product.variant.unit.price.empty=Variant unit price cannot be less than 0
message.product.variant.negative.unit.price=Variant unit price cannot be less than 0
message.product.variant.currency.length.error=Currency field length must be less than 60
message.product.variant.available.from.error=Available from must be smaller to available until
message.product.variant.status.empty=Status field must be one of (decommissioned, blocked, available)

#Product supplier validator exception messages
message.supplier.empty=supplier object must not be empty
message.supplier.is.assigned.to.product=Supplier with id {0} is assigned to some product
message.supplier.id.empty=id field must not be empty
message.supplier.code.empty=code field must not be empty
message.supplier.name.empty=name field must not be empty
message.supplier.code.length.error=code field is too large
message.supplier.name.length.error=name field is too large
message.supplier.description.length.error=description field is too large

#Product tax validator exception messages
message.tax.empty=tax object must not be empty
message.tax.not.found=Tax not found by id {0}
message.tax.type.empty=taxType field must not be empty
message.tax.percentage.empty=percentValue field must not be empty
message.tax.fixed.value.empty=fixedValue field must not be empty
message.tax.negative.fixed.value=fixedValue must be a positive number
message.tax.negative.percentage.value=percentValue must be a positive number
message.tax.type.length.error=Tax type field must be less than to 60 chars
message.tax.description.length.error=description field is must be less than to 255 chars

#Operation messages
message.operation.added.success=Operation added successfully
message.operation.updated.success=Operation updated successfully
message.operation.id.not.found=Operation id not found

#State transition messages
message.state.transition.added.success=State transition added successfully
message.state.transition.updated.success=State updated successfully
message.state.invalid=Invalid states provided

#Product category messages
message.product.category.added.success=Product category added
message.product.category.updated.success=Product category updated
message.product.category.deleted.success=Product category deleted by id {0}
message.product.category.get.all.success=Products
message.product.category.get.success=Product

#Product messages
message.product.added.success=Product added
message.product.deleted.success=Product deleted by id {0}
message.product.updated.success=Product updated
message.product.get.all.success=Products
message.product.get.success=Product
message.product.search.success=Success
message.product.search.by.supplier.id.success=Success
message.product.get.by.sku.success=Found product by SKU

#Product variant messages
message.product.variant.added.success=Product variant added
message.product.variant.deleted.success=Product variant deleted by product id {0} and variant id {1}
message.product.variant.updated.success=Updated product variant
message.product.variant.get.all.success=Found product variants
message.product.variant.get.success=Success
message.product.variant.get.by.sku.success=Success
message.product.variant.search.success=Success

#Workflow messages
message.workflow.success=Success
message.supplier.delete.success=Supplier deleted by id {0}

#Tax messages
messages.tax.success=Success
message.tax.delete.success=Tax deleted by id {0}

#Pageable criteria validation messages
message.pageable.order.value.error=Order value must be from [asc,desc]
message.pageable.order.by.value.error=Order by value must be from [name,imageUrl,availableCount,totalCount,category,type,unitPrice,productSKU]
message.pageable.page.value.error=Page value must be non negative
message.pageable.page.count.value.error=Per page value must be a non negative

#SearchVariant criteria validation messages
message.search.variant.negative.error=Product sku cannot be a negative value
message.search.variant.invalid.child.ids=Invalid child reseller ids

message.product.code.not.found=Unable to find product by code: {0}
message.product.default.supplier=default supplier is not configured in the system
message.related.product.not.found={0} is not a valid Product SKU

# Messages for audit trail
message.audit-trail.ADD_PRODUCT=Added a new product with code (${response.getProduct().getCode()}) and Id (${response.getProduct().getId()})
message.audit-trail.UPDATE_PRODUCT=Updated product with code (${response.getProduct().getCode()}) and Id (${response.getProduct().getId()})
message.audit-trail.ADD_PRODUCT_VARIANT=Added product variant with SKU (${response.getProductVariant().getProductSKU()}) and Id (${response.getProductVariant().getVariantId()})
message.audit-trail.UPDATE_PRODUCT_VARIANT=Updated product variant with SKU (${response.getProductVariant().getProductSKU()}) and Id (${response.getProductVariant().getVariantId()})
message.audit-trail.ADD_CATEGORY=Added category with name (${response.getProductCategory().getName()}) and Id (${response.getProductCategory().getId()})
message.audit-trail.UPDATE_CATEGORY=Updated category with name (${response.getProductCategory().getName()}) and Id (${response.getProductCategory().getId()})

message.product.variants.added.success=All Product variants in batch request are processed successfully.
message.products.variants.added.failed=Fail to process product variant in bulk request.
message.products.variants.partial.added.success={0} out of {1} Product variants(s) are processed in batch request.
