apiVersion: apps/v1
kind: Deployment
metadata:
  name: gp-logstash-others
  labels:
    app: gp-logstash-others
  namespace: ers-prod
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
       maxSurge: 50%
  selector:
    matchLabels:
      app: gp-logstash-others
  template:
    metadata:
      labels:
        app: gp-logstash-others
    spec:
      serviceAccountName: ers-prod-app-sa
      securityContext:
        fsGroupChangePolicy: "OnRootMismatch"
        seLinuxOptions:
          type: "spc_t"            
      containers:
        - image: sdsdockerhub/logstash-jdbc-v2:8.1.2 #PROD is having logstash-jdbc:8.1.2. We have build with tagging logstash-jdbc-v1:8.1.2 during internal setup
#        - image: sdsdockerhub/logstash-jdbc:8.1.2
          imagePullPolicy: Always
          name: gp-logstash-others
#          resources:
#            limits:
#              cpu: "3"
#              memory: 10Gi
#            requests:
#              cpu: "2"
#              memory: 8Gi
          env:
          - name: TZ
            value: "Asia/Dhaka"
          ports:
          - containerPort: 9045
          - containerPort: 9030
          - containerPort: 9031
          - containerPort: 9032
          - containerPort: 9033
          readinessProbe:
            tcpSocket:
              port: 9045
            initialDelaySeconds: 40
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 9045
            initialDelaySeconds: 40
            periodSeconds: 5
          command: ['logstash','-f','/usr/share/logstash/custom/pipeline']
          volumeMounts:
          - name: logstash-log
            mountPath: /var/seamless/log/logstash/ 
          - name: logstash-config
            mountPath: /usr/share/logstash/config 
          - name: logstash-pipeline
            mountPath: /usr/share/logstash/custom/pipeline 
          - name: logstash-cert
            mountPath: /usr/share/logstash/custom/certs 
            readOnly: true
#         - mountPath: /usr/share/logstash/log4j/pipeline/log4j2.properties
#           name: logstash-nginx-log4j
#           subPath: log4j2.properties            
          - mountPath: /usr/share/zoneinfo/Asia/Dhaka
            name: tz-dhaka
            subPath: Dhaka
      volumes:
        - name: tz-dhaka
          configMap:
            name: asia-dhaka-tz-config
            items:
            - key: Dhaka
              path: Dhaka
        - name: logstash-log
          emptyDir: {}
        - name: logstash-config
          configMap:
            name: logstash-config-others
        - name: logstash-pipeline 
          configMap:
            name: logstash-pipeline-others
#       - name: logstash-log4j
#         configMap:
#           name: logstash-log4j            
        - name: logstash-cert 
          secret:
            secretName: elastic-search-secret
            optional: true
      imagePullSecrets:
        - name: private-repo
